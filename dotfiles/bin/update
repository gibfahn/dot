#!/usr/bin/env bash

set -e

usage() {
echo "$(tput bold; tput setaf 74)$0 [-h|--help]$(tput sgr0)

Updates everything on your system, starting with the dotfiles themselves. If
you add your own things that need updating, add to this script.
"
}

[[ $1 =~ ^(--help|-h)$ ]] && { usage; exit; }

[[ $1 =~ ^(--version|-v)$ ]] && { echo "main"; exit; }

# Get path to dotfiles.
dotDir="$(cd "$(dirname "$(readlink $0)")"/../..; pwd)"

. "$dotDir"/helpers/setup.sh # Load helper script from dot/helpers.

# Update dotfiles repo to the latest upstream version, preserving your changes.
# TODO(gib): # Should really prompt you to go update, not just bail, definitely shouldn't just continue.

if ! gitUpdate "$dotDir"; then
  printf "${RED}ERROR:${NC} Update failed, go to your dot repo and manually run these commands to rebase and fix conflicts:
    git rebase
    git mc # Runs my alias to fix merge conflicts.
    git rebase --continue # Till you're done.

    If everything goes wrong, you can go back to where you where with:

    git checkout $(cd "$dotDir"; git rev-parse --short HEAD)\n\n"
  exit 1
fi

# Apply latest dotfile changes to your system.
pushd "$dotDir" &>/dev/null
./up
status=$?
popd
exit "$status"
