#!/usr/bin/env bash

# Checks ~/wrk and ~/code for git repos (things with .git subdirs) and checks
# for unsaved changes. If this passes all your repos are backed up to their git
# remotes.

set -eu

MAGENTA='\033[0;35m'    # Magenta (purple).
RED='\033[0;31m' # Red.
CYAN='\033[0;36m'       # Light blue.
NC='\033[0m' # No Colour.

# Usage: exit message [rc]
error() {
  printf "${RED}Error:${NC} %s\n" "$1"
  exit "${2:-1}"
}

# Usage: indented_text=$(indent <<<"$text")
indent() {
  sed -e "s/^/        /" -e "s/\\\\n/        /"
}

if [[ -n ${1:-} ]]; then
  # Check status for $1 dir.
  repo_path="$1"
  unpushed=""

  if [[ $repo_path == */go/* ]]; then
    exit 0 # Skip go directories.
  fi

  cd "$repo_path" || error "Couldn't cd to $repo_path"

  stash+=$(git stash list --color=always)
  if [[ -n $stash ]]; then
    unpushed+="    ${CYAN}-> Repo has stashed changes:${NC}\n"
    unpushed+=$(indent <<<"$stash\n")
  fi

  diff+=$(git diff --color=always)
  if [[ -n $diff ]]; then
    unpushed+="    ${CYAN}-> Repo has uncommitted diffs:${NC}\n"
    unpushed+=$(indent <<<"$diff\n")
  fi

  # Plumbing version of 'git branch'.
  for branch in $(git for-each-ref refs/heads/ --format='%(refname:short)'); do
    branch_hash=$(git rev-parse "$branch")

    push_hash=$(git rev-parse "$branch@{push}" 2>/dev/null) && true
    has_push=$?
    upstream_hash=$(git rev-parse "$branch@{upstream}" 2>/dev/null) && true
    has_upstream=$?

    if [[ $has_push == 0 ]]; then
      # What's not in push branch that is in local branch?
      push_delta=$(git cherry -v "$push_hash" "$branch_hash")
      if [[ -n $push_delta ]]; then
        unpushed+="    ${CYAN}-> $branch has commits not in @{push}:${NC}\n"
        unpushed+=$(indent <<<"$push_delta\n")
      fi
    elif [[ $has_upstream == 0 ]]; then
      # What's not in upstream branch that is in local branch?
      upstream_delta=$(git cherry -v "$upstream_hash" "$branch_hash")
      if [[ -n $upstream_delta ]]; then
        unpushed+="${CYAN}-> $branch has commits not in @{upstream}:${NC}\n"
        unpushed+=$(indent <<<"$upstream_delta\n")
      fi
    else
      unpushed+="${CYAN}-> $branch has no @{upstream} or @{push}${NC}\n"
    fi
  done

  if [[ -n $unpushed ]]; then
    echo -e "${MAGENTA}=> $repo_path${NC}\n$(echo -e "$unpushed" | sed 's/^/    /')\n"
    exit 1
  fi
else
  # Call self with each dir.
  fd --no-ignore --hidden --type directory '^\.git$' ~/wrk ~/code -x "$0" '{//}' && true
  rc=$?
  if [[ $rc != 0 ]]; then
    error "Unpushed changes, see above ⬆⬆⬆." "$rc"
  fi
fi
