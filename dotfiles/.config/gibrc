# shellcheck shell=zsh
# My shell configuration file. Must be sourced. I include this from .profile, .bashrc, and .zshrc
# like so:
#   . "$HOME/.config/gibrc"

# {{{ Initial setup

[ -n "$NORC" ] && return # Don't run if NORC set.
[ "$ZSH_VERSION" ] || return # Only run if using zsh

case $- in
  *i*) [ "$GIBRC" ] && echo "Reusing gibrc..." ;;
  *) return ;; # Exit if not running interactively.
esac
export GIBRC
: "${GIBRC:=0}" # First time through this is 0, next time 1 (etc).

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
printf '\e[4 q' # Cursor is an underline (_) while shell setup is running.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${USER}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${USER}.zsh"
fi

# }}} Initial setup

# {{{ Used Later

uname="$(uname)" # Used later to avoid repeatedly running uname.

# Note that command -v is a built-in in zsh, so no speed issues.
exists() { command -v "$1" >/dev/null 2>&1; } # Check if command exists (is in path).

# Cross-platform copy/paste aliases used later via ${aliases[cpy]}.
case $uname in
  Darwin) alias cpy="pbcopy" pst="pbpaste" ;;
  Linux) alias cpy="xclip -selection clipboard" pst="xclip -selection clipboard -o" ;;
esac

# }}} Used Later

# {{{ Environment Variables

# For making things adhere to XDG see: https://wiki.archlinux.org/index.php/XDG_Base_Directory
export XDG_CACHE_HOME=${XDG_CACHE_HOME:-"$HOME/.cache"} # Cache stuff should go here.
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-"$HOME/.config"} # Config stuff should go here.
export XDG_DATA_HOME=${XDG_DATA_HOME:-"$HOME/.local/share"} # Data should go here.

# Referred to in a later command, so order matters.
export FZF_PREVIEW_COMMAND="[[ -d {} ]] && tree -C -L 2 -x --noreport --dirsfirst {} || { [[ -e {} ]] && $XDG_DATA_HOME/nvim/plugged/fzf.vim/bin/preview.sh {} } || printf {}"

export ATOM_HOME="$XDG_DATA_HOME"/atom # Atom data goes here.
export AWS_CONFIG_FILE="$XDG_CONFIG_HOME/aws/config"
export AWS_SHARED_CREDENTIALS_FILE="$HOME/.ssh/tokens/aws/credentials"
export BABEL_CACHE_PATH=${BABEL_CACHE_PATH="$XDG_CACHE_HOME/babel/cache.json"} # Set babel cache location.
export BAT_THEME="TwoDark" # Set the default theme for bat and delta.
export CARGO_HOME="$XDG_DATA_HOME/cargo" # Cargo goes here.
export CCACHE_CONFIGPATH="$XDG_CONFIG_HOME"/ccache.config
export CCACHE_DIR="$XDG_CACHE_HOME"/ccache # Ccache cache.
export COURSIER_CREDENTIALS="$XDG_CONFIG_HOME/coursier/credentials.properties"
export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker
export FZF_ALT_C_COMMAND='fd --type d --hidden --no-ignore --follow --exclude .git'
export FZF_CTRL_R_OPTS="--height=100% --preview-window=down:30%:noborder --preview 'bat --language=zsh --plain --terminal-width=\$FZF_PREVIEW_COLUMNS --wrap=character --color=always <<<\$(echo {2..})', --bind='ctrl-y:execute(${aliases[cpy]} <<< {2..})'"
export FZF_CTRL_T_COMMAND='fd --type f --hidden --follow --exclude .git'
export FZF_CTRL_T_OPTS="--height=100% --preview-window=right:60%:noborder --preview '($FZF_PREVIEW_COMMAND) 2> /dev/null'"
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git' # Use fd for fuzzy finding if available.
# Ctrl-a -> select/deselect all, Ctrl-y -> copy line, Alt-s -> sneak to line, Alt-Shift-s -> sneak to line + enter, Ctrl-p is open/close preview window.
export FZF_DEFAULT_OPTS="--select-1 --exit-0 --preview-window=right:50% --preview '$FZF_PREVIEW_COMMAND' -m --bind='ctrl-o:execute(\$VISUAL {} </dev/tty >/dev/tty),ctrl-a:toggle-all,ctrl-s:toggle-sort,ctrl-w:toggle-preview-wrap,alt-s:jump,alt-S:jump-accept,ctrl-p:toggle-preview,ctrl-y:execute(${aliases[cpy]} <<< {})'"
export FZF_DEFAULT_SORT=10000
export GNUPGHOME="$XDG_DATA_HOME"/gnupg # Gpg data.
export GOPATH="$HOME/code/go"
export GRADLE_USER_HOME="$XDG_DATA_HOME"/gradle # Also contains gradle.properties (symlink from XDG_CONFIG_HOME).
export HELM_HOME="$XDG_DATA_HOME/helm" # Move Helm data dir from ~.
export HTTPIE_CONFIG_DIR="$XDG_CONFIG_HOME/httpie" # https://github.com/jakubroztocil/httpie/issues/145
export IPYTHONDIR="$XDG_CACHE_HOME/ipython" # Move iPython dir from ~.
export LESSHISTFILE="$XDG_CACHE_HOME/less/history" # Get less to put its history here.
export LESSKEY="$XDG_CACHE_HOME/less" # Less color settings.
export MINIKUBE_HOME="$XDG_CACHE_HOME/minikube" # https://github.com/kubernetes/minikube/issues/4109
export NODE_REPL_HISTORY="$XDG_CACHE_HOME/node_repl_history" # Set node-gyp download location.
export NPM_CONFIG_CACHE="$XDG_CACHE_HOME/npm" # Set npm cache location.
export NPM_CONFIG_DEVDIR="$XDG_CACHE_HOME/node-gyp" # Set node-gyp download location.
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/config" # Set up my npm config location.
export PAGER=less
export PEX_ROOT="$XDG_CACHE_HOME/pex" # Cache directory for https://github.com/pantsbuild/pex.
export RBENV_ROOT="$XDG_CACHE_HOME/rbenv" # Set rbenv location.
export RUSTUP_HOME="$XDG_DATA_HOME/rustup" # Rustup goes here.
export SCCACHE_DIR="$XDG_CACHE_HOME/sccache" # sccache cache dir.
export VIRTUAL_ENV_DISABLE_PROMPT=1 # Add the virtualenv prompt myself.
export VOLTA_HOME="$XDG_CACHE_HOME/volta" # Set directory to use for volta install.
export ZDOTDIR="${XDG_CONFIG_HOME}/zsh" # Path to zsh config files.

# Less options: Tab is 4 spaces, search ignores case, enable colours, cat if less than one screen.
# --status-column=>column to show lines matching current search or first unread line after moving
# -quit-if-one-screen=>exit if file fits in one screen, --ignore-case=>smartcase search, --LONG-PROMPT=>verbose prompt, --RAW-CONTROL-CHARS=>show colors,
# --HILITE-UNREAD=>highlight first unread line moving, --tabs=4=>tab is 4 spaces, --window=-4=>keep 4 lines overlapping when scrolling with the space key
export LESS='--tabs=4 --ignore-case --RAW-CONTROL-CHARS --quit-if-one-screen --status-column --LONG-PROMPT --HILITE-UNREAD --window=-4' # See less options comment below.
export BAT_PAGER="less $LESS" # Make bat use less pager options.

export HISTSIZE=100000 SAVEHIST=100000 HISTFILE="$XDG_CACHE_HOME/zsh/history" # Set history file location and size.

[[ -d "$XDG_CONFIG_HOME/terminfo" ]] && export TERMINFO="$XDG_CONFIG_HOME/terminfo" # Put terminal info in here.
[[ $TERM == xterm ]] && TERM=xterm-256color

# }}} Environment Variables

# {{{ System Path Setup

# Where brew is on the system if it's installed.
# Script expects brew to be already in the path, e.g. by adding to /etc/paths.d with:
#   echo "$(brew --prefix)/bin" | sudo tee /etc/paths.d/10-brew
exists brew && brew_prefix=$(brew --prefix)

typeset -U path # Don't allow duplicates in the path (keep left-most entry).

path=(
  ${VIRTUAL_ENV:+$VIRTUAL_ENV/bin} # Virtual env needs to be in front of /usr/local/bin.

  $HOME/bin # Put random binaries you want to run in here.
  $HOME/.local/bin

# /usr/local/opt/ccache/libexec # Add ccache to the path if installed (macOS).
# /usr/lib/ccache # Add ccache to the path if installed (Linux).

  # Overrides the version in ${brew_prefix}/bin.
  ${CARGO_HOME:+$CARGO_HOME/bin} # Rust packages.
  ${VOLTA_HOME:+$VOLTA_HOME/bin} # Node.js and packages.

  ${brew_prefix:+$brew_prefix/opt/llvm/bin} # Homebrew clangd tools.
  ${brew_prefix:+$brew_prefix/opt/ruby/bin} # Brew ruby.
  ${brew_prefix:+$brew_prefix/lib/ruby/gems/*/bin(N)} # Add ruby or skip.
  ${brew_prefix:+$brew_prefix/bin} # Alternate brew install location.

  /usr/local/sbin # Missed in some shells.
  /usr/local/bin # Missed in some shells.
  /usr/bin # Should be after /usr/local/bin.

  $HOME/Library/Python/*/bin(N) # macOS Python User Packages.
  ${GOPATH:+$GOPATH/bin} # Go binaries.
  ${VULKAN_SDK:+$VULKAN_SDK/bin} # VulkanSDK packages.
  $path
)
export PATH

# }}} System Path Setup

# {{{ Zsh Plugins and Sourcing

# Add completion dirs to function path.
_gib_fpath_dirs=(
  ${brew_prefix:+$brew_prefix/share/zsh/site-functions} # Brew shell completions if there.
  $XDG_DATA_HOME/zfunc # Put (or symlink) autocomplete scripts in here.
)
for _gib_dir in "${_gib_fpath_dirs[@]}"; do
  [[ -d $_gib_dir ]] && fpath+=("$_gib_dir")
done
unset _gib_dir _gib_fpath_dirs

# Set up completion manager.
autoload -Uz compinit
compinit

# If you get a compinit error, run:
#   autoload -Uz compinit && compaudit | xargs chmod g-w

# Run plugin manager.
eval "$(sheldon source)"

zsh-defer -c "autoload -Uz compinit && compinit -d $XDG_CACHE_HOME/zsh/.zcompdump$(hostname)"

# }}} Zsh Plugins and Sourcing

# {{{ Zsh options

setopt always_to_end # Move to end of word after completing that word from the middle of it.
setopt auto_cd # Typing a path that isn't a command will cd to it.
setopt auto_pushd # cd pushes onto pushd stack (Try `cd -<Tab>`)
setopt complete_in_word # Allow completing words when you're in the middle of them.
setopt extended_history # Save timestamps in history.
setopt hist_expire_dups_first # Delete duplicates when history is full.
setopt hist_ignore_all_dups # Remove older dups in HISTFILE when adding newer ones.
setopt hist_ignore_space # Don't save history lines if they start with ' ' (use for secret values).
setopt inc_append_history # Show local history before remote.
setopt interactive_comments # Allow comments in the terminal.
setopt long_list_jobs # Show more info on background jobs.
setopt no_list_ambiguous # Show menu on first tab if multiple matches (don't wait for second tab).
setopt no_list_beep # Don't beep if tab-complete has multiple choices, only if no such file.
setopt no_notify # Print job updates just before a prompt (not mid-execution).
setopt prompt_percent # Allow variables and functions to be used in the prompt.
setopt prompt_subst # Perform expansion and subsitution on PROMPT and RPROMPT.
setopt pushd_ignore_dups # Don't push multiple copies onto the directory stack.
setopt pushd_minus # Make `cd -2` be two dirs ago rather than `cd +2`.
setopt pushd_silent # Don't print pushd stack after pushd or cd (unless in CDPATH).
setopt share_history # Do show history from other open tabs.

CDPATH=~ # Check ~ for directories after checking . (`c/d/` matches `./c*/d*/`, then tries `~/c*/d*/`).

command mkdir -p $XDG_CACHE_HOME/$shell # Create HISTFILE dir if necessary.

# }}} Zsh options

# {{{ Tool specific

# Set key repeat rate if available (Linux only). You probably want something less excessive here, like rate 250 30.
if [[ "$uname" = Linux ]]; then
  exists xset && xset r rate 120 45
  export PANEL_FIFO=/tmp/panel-fifo # Used by bspwm.
fi

GIBRC=$((GIBRC++)) # Increment GIBRC.

# }}} Tool specific

# vim: foldmethod=marker filetype=zsh tw=100
