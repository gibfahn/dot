// See scheme for more options (although it's easier to just use autocomplete for it).
//   https://github.com/neoclide/coc.nvim/blob/master/data/schema.json
{
  // COC OPTIONS

  // Used to show a menu item is a snippet.
  "suggest.snippetIndicator": " ‚ñ∫",
  "suggest.enablePreview": true,
  // Enable preselect feature on Neovim, automatically select first item.
  // "suggest.enablePreselect": true,
  // Input number to select completion, could be wrong when using '<up>' and '<down>' to select complete item.
  "suggest.numberSelect": true,
  // Trigger completion after InsertEnter.
  "suggest.triggerAfterInsertEnter": true,

  // Used in the gutter for errors.
  "diagnostic.errorSign": "‚úñ",
  // Used in the gutter for warnings.
  "diagnostic.warningSign": "‚ö†",
  // Used in the gutter for Info messages.
  "diagnostic.infoSign": "‚Ñπ",
  // Used in the gutter for Info messages.
  "diagnostic.hintSign": "‚Ñπ",

  "dialog.confirmKey": "<cr>",

  // Used in diagnostics lists etc (:h coc-list-mappings).
  "list.insertMappings": {
    // Select all options (use with an action).
    "<C-a>": "do:selectall",
    "<C-r>": "do:refresh",
    "<C-q>": "action:quickfix"
  },
  "codeLens.enable": true,
  "coc.preferences.colorSupport": true,
  // Unset this as the python autoformat disagrees with flake8.
  "coc.preferences.formatOnType": true,
  "coc.preferences.currentFunctionSymbolAutoUpdate": true,
  // The symbol in the completion menu for words in the current file.
  "coc.source.around.shortcut": "‚Üï",
  // The symbol in the completion menu for words in other open buffers.
  "coc.source.buffer.shortcut": "‚Üî",
  // The symbol in the completion menu for words in other open buffers.
  "coc.source.file.shortcut": "F",
  // üêì üêî Set this for LanguageServer symbol instead of LS once possible.

  // COC EXTENSION OPTIONS
  "python.linting.enabled": false,
  "python.linting.flake8Enabled": true,
  "python.linting.pydocstyleEnabled": false,
  "python.jediEnabled": false,
  "rust-analyzer.checkOnSave.command": "clippy",
  "yaml.format.enable": true,
  "yaml.hover": true,
  "yaml.schemas": {
    "https://pages.github.pie.apple.com/dchao3/kw-to-json-schema/resources/rio.schema.json": "/rio.yml",
    "http://json.schemastore.org/gitlab-ci": "/.gitlab-ci.yml"
  },
  "json.schemas": [
    {
      "fileMatch": ["package.json"],
      "url": "http://json.schemastore.org/package"
    }
  ],
  "prettier.disableLanguages": ["markdown"],
  "prettier.trailingComma": "all",

  // CUSTOM LANGUAGE SERVERS
  // (for ones with coc extensions see g:coc_global_extensions in vimrc).
  "languageserver": {
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["Dockerfile"],
      "args": ["--stdio"]
    },
    "bash": {
      "command": "bash-language-server",
      "filetypes": ["sh"],
      "args": ["start"]
    },
    "kotlin": {
      "command": "kotlin-language-server",
      "filetypes": ["kotlin"]
    },
    "swift": {
      "command": "sourcekit-lsp",
      "filetypes": ["swift"]
    },
    "dls": {
      "command": "diagnostic-languageserver",
      "args": ["--stdio"],
      "filetypes": [ "sh", "email", "vim" ],
      "initializationOptions": {
        "linters": {
          "shellcheck": {
            "command": "shellcheck",
            "debounce": 100,
            "args": [ "--format=gcc", "-"],
            "offsetLine": 0,
            "offsetColumn": 0,
            "sourceName": "shellcheck",
            "formatLines": 1,
            "formatPattern": [
              "^[^:]+:(\\d+):(\\d+):\\s+([^:]+):\\s+(.*)$",
              {
                "line": 1,
                "column": 2,
                "message": 4,
                "security": 3
              }
            ],
            "securities": {
              "error": "error",
              "warning": "warning",
              "note": "info"
            }
          },
          "languagetool": {
            "command": "languagetool",
            "debounce": 200,
            "args": ["-"],
            "offsetLine": 0,
            "offsetColumn": 0,
            "sourceName": "languagetool",
            "formatLines": 2,
            "formatPattern": [
              "^\\d+?\\.\\)\\s+Line\\s+(\\d+),\\s+column\\s+(\\d+),\\s+([^\\n]+)\nMessage:\\s+(.*)$",
              {
                "line": 1,
                "column": 2,
                "message": [4, 3]
              }
            ]
          },
          "vint": {
              "command": "vint",
              "debounce": 100,
              "args": [
                  "--style-problem",
                  "--no-color",
                  "--enable-neovim",
                  "-f",
                  "'{file_path}:{line_number}:{column_number}: {severity}: {description} (see {reference})'",
                  "-"
              ],
              "offsetLine": 0,
              "offsetColumn": 0,
              "sourceName": "vint",
              "formatLines": 1,
              "formatPattern": [
                  "^[^:]+:(\\d+):(\\d+):\\s+([^:]+):\\s+(.*)$",
                  {
                      "line": 1,
                      "column": 2,
                      "message": 4,
                      "security": 3
                  }
              ],
              "securities": {
                  "error": "error",
                  "warning": "warning",
                  "info": "style_problem"
              }
          }
        },
        "filetypes": {
          "sh": "shellcheck",
          "vim": "vint",
          "email": "languagetool"
        }
      }
    }
  },
  "java.errors.incompleteClasspath.severity": "ignore"
}
