#!/usr/bin/env bash
# shellcheck shell=bash disable=SC1090,SC2016

# Installs things that I use on all Unix systems (e.g. macOS and Linux).

set -euo pipefail

set -x

. "$(dirname "$0")"/../../helpers/setup.sh # Load helper script from dot/helpers.

# Set default shell to zsh (or $NEWSHELL if set).

# $SHELL isn't updated until we logout, so check whether chsh was already run.
uname=$(uname)
if [[ "$uname" == Darwin ]]; then # macOS
  shell=$(dscl . -read "$HOME" UserShell)
elif [[ "$uname" == Linux ]]; then # Linux.
  shell=$(grep "$USER" /etc/passwd | awk -F : '{print $NF}')
fi
# Fall back to $SHELL if that doesn't work.
shell=${shell:-$SHELL}
if [[ -z "${ZSH_VERSION:-}" && "${shell##*/}" != zsh ]]; then
  NEWSHELL=${NEWSHELL-$(grep zsh /etc/shells | tail -1)} # Set NEWSHELL for a different shell.
  if [[ -e "$NEWSHELL" ]]; then
    log_get "Shell change (Current shell is $shell, changing to $NEWSHELL)."
    chsh -s "$NEWSHELL" || log_skip "Shell change (chsh failed)."
  else
    log_skip "Shell change (current shell is $shell (\$SHELL=$SHELL) but shell $NEWSHELL (zsh) doesn't exist)
    Install zsh and then run chsh -s /path/to/zsh"
  fi
else
  log_skip "Shell change ($shell is already the default shell)"
fi

# Cleanup any zsh completion dirs with bad permissions.
insecure_dirs=()
while read -r val; do
  insecure_dirs+=("$val")
done <<<"$(zsh -c 'autoload -U compaudit; compaudit')"
if [[ -n ${insecure_dirs[*]} ]]; then
  log_get "compinit (zsh completion dir permissions)"

  user="$(id -un)" group="$(id -gn)"
  for insecure_dir in "${insecure_dirs[@]}"; do
    sudo chown "$user:$group" "$insecure_dir"
    sudo chmod -R 755 "$insecure_dir"
  done
else
  log_skip "compinit (zsh completion dir permissions)"
fi

log_get "Updating ZSH Completions"
# Put completion files into this dir so they get picked up by zinit in zshrc.
# Anything that pulls directly from a URL can be added directly to _gib_completion_files in zshrc.
mkdir -p "$XDG_DATA_HOME/zsh/completions"

# _rustup and _cargo
if exists rustup; then
  rustup completions zsh >"$XDG_DATA_HOME/zsh/completions/_rustup"
  # Creates "$XDG_DATA_HOME/zsh/completions/_cargo"
  ln -sf "$(realpath "$(dirname "$(rustup which cargo)")"/../share/zsh/site-functions)"/* "$XDG_DATA_HOME/zsh/completions/"
fi

# _rbenv
if exists rbenv; then
  ln -sf "$XDG_DATA_HOME/rbenv/completions/rbenv.zsh" "$XDG_DATA_HOME/zsh/completions/_rbenv"
fi
