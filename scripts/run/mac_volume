#!/usr/bin/env zsh

# Create a case-sensitive volume for code shared between multiple macOS installs.

set -euo pipefail

set -x

EXIT_CODE_SKIPPED="$EXIT_CODE_SKIPPED" # up treats this exit code as "skipped"

shared_name=Shared-Data
shared_volume=/Volumes/$shared_name

# Create a case-sensitive shared volume for code etc.
if [[ ! -d $shared_volume ]]; then
  this_disk=$(/usr/libexec/PlistBuddy -c "print APFSContainerReference" =(diskutil info -plist /))
  diskutil apfs addVolume $this_disk 'Case-sensitive APFS' $shared_name
fi

dirs_to_move=(
  ~/code
  ~/wrk
  ~/src
)

work_done=
for dir in $dirs_to_move; do
  [[ -L $dir ]] && continue

  # e.g. /Users/gib/code -> /Volumes/Shared-Data/Users/gib/code
  shared_dir=${shared_volume}${dir}

  # If directory not present skip it.
  if [[ ! -d $dir ]]; then
    if [[ -d $shared_dir ]]; then
      work_done=true
      ln -s $shared_dir $dir || sudo ln -s $shared_dir $dir
      continue
    else
      continue
    fi
  fi

  work_done=true
  mkdir -p $(dirname $shared_dir)
  # If dir is owned by root (e.g. /opt/homebrew) then mv will complete, but deleting old dir will
  # fail, so delete just that empty dir (if it's truly empty) with `sudo rm -d`
  mv $dir $shared_dir || sudo rm -d $dir
  # If we fail to link normally, link with sudo.
  ln -s $shared_dir $dir || sudo ln -s $shared_dir $dir
done

if [[ -z ${work_done:-} ]]; then
  exit "$EXIT_CODE_SKIPPED"
fi
