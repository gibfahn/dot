#!/usr/bin/env bash

. "$(dirname "$0")/../../helpers/setup.sh" # Load helper script from dot/helpers.

set -ex

# Install brew and Xcode Command Line Tools.
if ! exists brew; then
  # Should only exist if we're on a work machine.
  if [[ -d $wrk_dotfile_dir ]]; then
    "$wrk_dotfile_dir"/setup/brew.sh
  else
    { set +x; } 2>/dev/null
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    set -x
  fi
fi

# Install xcode command line tools (should have already been brew installed).
# If these are messed up run `xcode-select -p`. It will normally print one of:
# - /Library/Developer/CommandLineTools
# - /Applications/Xcode.app/Contents/Developer
if ! xcode-select -p &>/dev/null; then
  xcode-select --install
fi

copyq_version_old=$(copyq --version || true)

# Disable quarantine for casks.
export HOMEBREW_CASK_OPTS=--no-quarantine

# Upgrade everything, even things that weren't in your Brewfile.
brew update

if ! brew outdated sogouinput; then
  brew reinstall sogouinput

  sogou_dir="$(brew info sogouinput | awk '/\/Caskroom\/sogouinput\// { print $1 }')"
  open -a "$sogou_dir"/sogou*.app
fi

brew upgrade # You may occasionally want to run `brew upgrade --greedy` in case built-in cask updaters aren't working.

# brew install things. Edit config/Brewfile to adjust.
brew tap Homebrew/bundle
if [[ $USER == gib ]]; then
  brewfiles=$(ls "$XDG_CONFIG_HOME"/brew/*)
else
  brewfiles=$(ls "$XDG_CONFIG_HOME"/brew/* | grep -v hardcore)
fi
# Replace '\n' with ' ':
brewfiles=${brewfiles//
/ }

if ! brew bundle --file=<(cat $brewfiles) check >/dev/null; then
  brew bundle --file=<(cat $brewfiles) | grep -Evx "Using [-_/0-9a-zA-Z ]+"
fi

# Useful to see what you need to add to your Brewfiles.
echo "Brew packages that would be cleaned up, run this to actually clean:
  brew bundle cleanup --force --file=<(cat $brewfiles)"
brew bundle cleanup --file=<(cat $brewfiles)

copyq_version_new=$(copyq --version)

if [[ $copyq_version_old != "$copyq_version_new" ]]; then
  echo "ERROR: CopyQ version changed, you need to manually untick and retick System Preferences -> Security & Privacy -> Accessibility -> CopyQ.app"
  open /System/Library/PreferencePanes/Security.prefPane
fi
